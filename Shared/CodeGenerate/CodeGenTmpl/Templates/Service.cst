<%@ CodeTemplate Language="C#" TargetLanguage="C#" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Register Name="Utility" Template=".\Utility.cst" MergeProperties="False" %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" %>

<% var entName = Utility.FormatDBNaming(SourceTable.Name); %>

        /// <summary>
        /// 搜索<%=entName%>
        /// </summary>
        public List<<%=entName%>DTO> Search<%=entName%>s(ref BaseSearchParameter para)
        {
            var dbEntitys = GetRepository<<%=entName%>Repository>().Search<%=entName%>s(para);
            if (dbEntitys == null || dbEntitys.Count == 0) return null;
            var resList = EntMapper.Map<List<<%=entName%>DTO>>(dbEntitys);
            
            return resList;
        }
        
<%----------------- Repo Method ----------------%>
        public List<<%=entName%>> Search<%=entName%>s(BaseSearchParameter para)
        {
            var query = string.IsNullOrWhiteSpace(para.KeyWords) ? ClientDb.<%=entName%> : ClientDb.<%=entName%>.Where(x => x.Name.Contains(para.KeyWords));
            
            if (para.StartDate > DateTime.MinValue) query = query.Where(x => x.CreateTime >= para.StartDate && x.CreateTime <= para.EndDate);

            para.Count = query.Count();
            return query.OrderByDescending(x => x.<%=entName%>Id).AsNoTracking().ToPagingList(para);
        }
        
        public <%=entName%> Get<%=entName%>(int id)
        {
            return ClientDb.<%=entName%>.AsNoTracking().FirstOrDefault(x => x.<%= Utility.FormatDBNaming(SourceTable.Columns[0].Name) %> == id);
        }
        
        public string Add<%=entName%>(<%=entName%> dbEntity)
        {
            ClientDb.<%=entName%>.Add(dbEntity);
            return ClientDb.SaveChanges() > 0 ? null : "保存信息失败";
        }
        
        public List<<%=entName%>> GetPendingSync<%=entName%>(DateTime updateStart, DateTime updateEnd)
        {
            return ClientDb.<%=entName%>.Where(x => x.LastUpdateTime > updateStart && x.LastUpdateTime <= updateEnd)
                .AsNoTracking().ToList();
        }
