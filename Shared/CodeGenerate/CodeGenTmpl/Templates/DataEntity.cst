<%@ CodeTemplate Language="C#" TargetLanguage="C#" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer.Extensions" %>
<%@ Import Namespace="System.Linq" %>
<%@ Register Name="Utility" Template="Utility.cst" MergeProperties="False" %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" %>
<%@ Property Name="NameSpace" Default="Aotran" Type="System.String" Category="Context" %>
<% 
    var entityName = Utility.FormatDBNaming(SourceTable.Name);
    var multipleKey = SourceTable.Columns.Where(x => x.IsPrimaryKeyMember).Count() > 1;
    var colOrder = 1;
%>
using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Tamos.AbleOrigin.DataProto;

namespace <%= NameSpace %>
{
    [Table("<%= SourceTable.Name %>")]
    public class <%= entityName %> : IGeneralEntity
    {
	<% for (int i = 0; i < SourceTable.Columns.Count; i++) { 
            var column = SourceTable.Columns[i];
        if(!string.IsNullOrEmpty(column.Description)) {
        %>
        /// <summary>
        /// <%= column.Description %>
        /// </summary>
        <% }
        if(column.IsPrimaryKeyMember) {
        %>
        [Key<% if(!column.ExtendedProperties.Contains(ExtendedPropertyNames.IdentityIncrement) || !column.ExtendedProperties.GetByKey<bool>(ExtendedPropertyNames.IdentityIncrement)){ %>, DatabaseGenerated(DatabaseGeneratedOption.None)<%} %>]
        <% } %>
        [Column("<%= column.Name %>"<%= multipleKey && column.IsPrimaryKeyMember ? string.Format(", Order = {0}", colOrder++) : string.Empty %>)]
		public <%= Utility.GetColType(column, Utility.NeedType.ColType) %> <%= Utility.FormatDBNaming(column.Name) %> { get; set; }
        
	<% } %>
	}
}