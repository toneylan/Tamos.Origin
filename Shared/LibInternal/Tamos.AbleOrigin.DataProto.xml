<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tamos.AbleOrigin.DataProto</name>
    </assembly>
    <members>
        <member name="M:Tamos.AbleOrigin.DataProto.DataIdBuilder.GenerateId(System.Int64,System.DateTime)">
            <summary>
            通用的Id生成
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.DataIdBuilder.GenerateIncId(System.Int64)">
            <summary>
            生成一个递增的编号
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.DataIdBuilder.ParseDate(System.Int64)">
            <summary>
            从Id解析出时间，支持16位格式
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.DataIdBuilder.ParseDateRange(System.Collections.Generic.IReadOnlyCollection{System.Int64})">
            <summary>
            解析时间范围
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.DataProtoExtend.MapTo``1(Tamos.AbleOrigin.DataProto.IGeneralEntity)">
            <summary>
            Map为目标类型
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.DataProtoExtend.MapTo``1(System.Collections.Generic.IReadOnlyCollection{Tamos.AbleOrigin.DataProto.IGeneralEntity})">
            <summary>
            Map为目标类型
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.DataProtoExtend.ById``1(System.Collections.Generic.List{``0},System.Int64)">
            <summary>
            按Id Find记录
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.DataProtoExtend.FillProperty``2(System.Collections.Generic.IReadOnlyCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Func{``0,System.Int64},System.Func{System.Collections.Generic.IReadOnlyCollection{System.Int64},System.Collections.Generic.List{``1}})">
            <summary>
            依据列表数据的关联Id，获取关联的记录并填充到相应的属性值。
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.DataProtoExtend.Validate``1(``0,System.String@)">
            <summary>
            检查对象的属性值是否有效，规则可通过PropMeta标记配置。
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.DataProtoExtend.Error``1(``0,System.String)">
            <summary>
            设置错误信息，并返回当前对象
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.DataProtoExtend.IsSuccess``1(``0)">
            <summary>
            ErrorMsg为空算成功。
            </summary>
        </member>
        <member name="T:Tamos.AbleOrigin.DataProto.IPagingQueryPara">
            <summary>
            分页查询参数接口
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.IPagingQueryPara.PageIndex">
            <summary>
            页索引
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.IPagingQueryPara.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.IPagingQueryPara.QueryTotal">
            <summary>
            是否查询总记录数
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.IPagingQueryPara.Count">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="T:Tamos.AbleOrigin.DataProto.IGeneralEntity">
            <summary>
            定义实体或者DTO的普遍属性（如Id），便于进行常规化操作。
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.IGeneralEntity.Id">
            <summary>
            对象自身Id
            </summary>
        </member>
        <member name="T:Tamos.AbleOrigin.DataProto.IGeneralSubEntity">
            <summary>
            子级对象，隶属某个父级对象。
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.IGeneralSubEntity.ParentId">
            <summary>
            父级对象Id
            </summary>
        </member>
        <member name="T:Tamos.AbleOrigin.DataProto.IGeneralParentEntity`1">
            <summary>
            带子级数据的对象。
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.IGeneralParentEntity`1.SubItems">
            <summary>
            子级数据列表
            </summary>
        </member>
        <member name="T:Tamos.AbleOrigin.DataProto.IGeneralResObj">
            <summary>
            General 响应/调用结果对象
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.IGeneralResObj.ErrorMsg">
            <summary>
            错误提示信息
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.ProtoSetAttribute.Tag">
            <summary>
            基类中包含时的Tag
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.ProtoSetAttribute.BaseType">
            <summary>
            标记基类，使其序列化时能包含父类属性。适用于无法在基类使用ProtoInclude的场景。
            </summary>
        </member>
        <member name="T:Tamos.AbleOrigin.DataProto.Size">
            <summary>
            表示宽高尺寸信息
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.Size.RatioFloor(System.Int32,System.Int32)">
            <summary>
            将尺寸缩减至当前宽高比，只会缩减更多那个维度。
            </summary>
        </member>
        <member name="T:Tamos.AbleOrigin.DataProto.EntityMeta">
            <summary>
            Entity元数据基类，配置入口。
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.EntityMeta.Get``1">
            <summary>
            获取实体类的元设置
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.EntityMeta.DefaultProp(System.String,System.String)">
            <summary>
            定义一些默认的属性设置，减少每次的单独标记。
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.EntityMeta.GetValidator``2(Tamos.AbleOrigin.DataProto.PropertyMeta{``0,``1})">
            <summary>
            获取对应类型的Validator
            </summary>
        </member>
        <member name="T:Tamos.AbleOrigin.DataProto.EntityMeta`1">
            <summary>
            一个Entity类型的元数据
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.EntityMeta`1.GetProp``1(System.String,System.Boolean)">
            <summary>
            按属性名获取对应类型元信息。<br/>
            默认只包含了带PropMeta标记的属性。
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.EntityMeta`1.GetProp(System.String,System.Boolean)">
            <summary>
            按属性名获取元信息。<br/>
            默认只包含了带PropMeta标记的属性。
            </summary>
        </member>
        <member name="T:Tamos.AbleOrigin.DataProto.BasePropMeta`1">
            <summary>
            属性的元数据基类
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.BasePropMeta`1.Name">
            <summary>
            属性名
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.BasePropMeta`1.CnName">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.BasePropMeta`1.GetValue(`0)">
            <summary>
            获取实例中的属性值
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.BasePropMeta`1.Validate(`0)">
            <summary>
            实体中属性值是否有效
            </summary>
        </member>
        <member name="T:Tamos.AbleOrigin.DataProto.PropertyMeta`2">
            <summary>
            特定类型属性的元数据
            </summary>
        </member>
        <member name="T:Tamos.AbleOrigin.DataProto.PropertyValidator`1">
            <summary>
            提供属性检查功能
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.PropertyValidator`1.Validate(Tamos.AbleOrigin.DataProto.PropMetaAttribute,`0)">
            <summary>
            默认属性值验证
            </summary>
        </member>
        <member name="T:Tamos.AbleOrigin.DataProto.PropMetaAttribute">
            <summary>
            定义属性的元信息
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.PropMetaAttribute.CnName">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.PropMetaAttribute.IsRequired">
            <summary>
            是否必需的属性。数字大于0，字符串非空……
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.PropMetaAttribute.MaxValue">
            <summary>
            最大值或长度（字符串时）
            </summary>
        </member>
        <member name="T:Tamos.AbleOrigin.DataProto.Payment.NotifyProcessResult">
            <summary>
            支付通知的处理结果
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.Payment.NotifyProcessResult.GatewayTranId">
            <summary>
            支付渠道方的流水号
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.Payment.NotifyProcessResult.ErrorMsg">
            <summary>
            错误描述信息
            </summary>
        </member>
        <member name="T:Tamos.AbleOrigin.DataProto.Payment.OrderProcessPara">
            <summary>
            处理订单的参数
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.Payment.OrderProcessPara.GatewayTranId">
            <summary>
            支付渠道的流水号
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.Payment.OrderProcessResult.IsReHandle">
            <summary>
            是否重复调用了处理
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.Payment.OrderProcessResult.ErrorMsg">
            <summary>
            错误描述信息
            </summary>
        </member>
        <member name="T:Tamos.AbleOrigin.DataProto.Payment.PayGatewayTypes">
            <summary>
            支付渠道枚举
            </summary>
        </member>
        <member name="F:Tamos.AbleOrigin.DataProto.Payment.PayGatewayTypes.WxMicroPay">
            <summary>
            微信付款码支付
            </summary>
        </member>
        <member name="F:Tamos.AbleOrigin.DataProto.Payment.PayGatewayTypes.WxJsApiPay">
            <summary>
            微信内支付
            </summary>
        </member>
        <member name="F:Tamos.AbleOrigin.DataProto.Payment.PayGatewayTypes.CbaCloudPay">
            <summary>
            Cba云支付
            </summary>
        </member>
        <member name="T:Tamos.AbleOrigin.DataProto.Payment.PayProcessResType">
            <summary>
            支付处理的结果类型
            </summary>
        </member>
        <member name="F:Tamos.AbleOrigin.DataProto.Payment.PayProcessResType.Error">
            <summary>
            支付失败
            </summary>
        </member>
        <member name="F:Tamos.AbleOrigin.DataProto.Payment.PayProcessResType.RequestSuccess">
            <summary>
            请求成功（如微信统一下单），可进入后续支付流程
            </summary>
        </member>
        <member name="F:Tamos.AbleOrigin.DataProto.Payment.PayProcessResType.PaymentSuccess">
            <summary>
            支付成功（如付款码直接支付）
            </summary>
        </member>
        <member name="T:Tamos.AbleOrigin.DataProto.Payment.PayResHandleWay">
            <summary>
            支付结果的后续处理方式
            </summary>
        </member>
        <member name="F:Tamos.AbleOrigin.DataProto.Payment.PayResHandleWay.Redirect">
            <summary>
            执行跳转，如到支付网关或三方支付平台
            </summary>
        </member>
        <member name="T:Tamos.AbleOrigin.DataProto.Payment.PayProcessResult">
            <summary>
            处理支付交易的结果
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.Payment.PayProcessResult.GatewayTranId">
            <summary>
            支付渠道的流水号。WxJsApi等可能不会返回。
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.Payment.PayProcessResult.ResultValue">
            <summary>
            处理结果信息。如用于后续支付的参数、跳转的url等
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.Payment.PayProcessResult.AttachData">
            <summary>
            附加的结果数据
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.Payment.PayProcessResult.ResHandleWay">
            <summary>
            后续处理方式
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.Payment.PayProcessResult.ErrorMsg">
            <summary>
            错误描述信息
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.Payment.PayProcessResult.IsSuccess">
            <summary>
            是否处理成功
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.Payment.PayProcessResult.Error(System.String)">
            <summary>
            设置错误结果
            </summary>
        </member>
        <member name="T:Tamos.AbleOrigin.DataProto.Payment.RefundProcessResult">
            <summary>
            退款处理结果
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.Payment.RefundProcessResult.ErrorMsg">
            <summary>
            错误描述信息
            </summary>
        </member>
        <member name="T:Tamos.AbleOrigin.DataProto.TimeConverter">
            <summary>
            定义时间点，从00:00为0开始计数，5分钟为单位。
            </summary>
        </member>
        <member name="F:Tamos.AbleOrigin.DataProto.TimeConverter.SpanMinutes">
            <summary>
            时间单位 5分钟
            </summary>
        </member>
        <member name="F:Tamos.AbleOrigin.DataProto.TimeConverter.HourSpanPoint">
            <summary>
            一小时的TimePoint值
            </summary>
        </member>
        <member name="F:Tamos.AbleOrigin.DataProto.TimeConverter.HalfHourSpanPoint">
            <summary>
            半小时的TimePoint值
            </summary>
        </member>
        <member name="F:Tamos.AbleOrigin.DataProto.TimeConverter.MaxTimePoint">
            <summary>
            不是0点，而是其前一刻。
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.TimeConverter.ParseTime(System.DateTime,System.Boolean)">
            <summary>
            按小时和分钟计算时间点。可设置不足SpanMinutes时，是否向上舌入。
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.TimeConverter.GetTimeByHourMinute(System.Int32,System.Int32,System.Boolean)">
            <summary>
            按小时和分钟计算时间点
            </summary>
            <param name="hour"></param>
            <param name="minutes"></param>
            <param name="greaterAtMiddle">处于中间时是否往更大时间延</param>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.TimeConverter.FixMinutesToHalfHours(System.Int32,System.Boolean)">
            <summary>
            修正分钟数到半小时的倍数
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.TimeConverter.GetSpanPointInRange(System.Int32,System.Int32)">
            <summary>
            获取范围的间隔时间点，支持跨天
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.TimeConverter.GetSpanMinutesInRange(System.Int32,System.Int32)">
            <summary>
            获取范围的间隔分钟数，支持跨天
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.TimeConverter.GetTimeList(System.Int32,System.Boolean)">
            <summary>
            获取一天的时间点列表
            </summary>
            <param name="spanMinites">时间点之间的间隔（如30、60mins[5的整数倍]）</param>
            <param name="zeroAtEnd">是否零点在结尾</param>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.TimeConverter.GetTimeList(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取指定范围的时间点列表，支持跨天。
            </summary>
        </member>
        <member name="T:Tamos.AbleOrigin.DataProto.TimePoint">
            <summary>
            表示一天中的某个时间点
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.TimePoint.Tick">
            <summary>
            自定义的时间值
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.TimePoint.Name">
            <summary>
            时间点的显示值，如 08:00
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.TimePoint.TotalMinutes">
            <summary>
            一天里的总分钟数
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.TimePoint.Add(System.Int32)">
            <summary>
            增加指定量，支持跨天
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.TimePoint.Subtract(System.Int32)">
            <summary>
            减少指定量，支持跨天
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.TimePoint.OnDate(System.DateTime)">
            <summary>
            以日期为基础，转为对应的当天时间
            </summary>
        </member>
        <member name="T:Tamos.AbleOrigin.DataProto.TimePointRange">
            <summary>
            时间点组成的范围
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.TimePointRange.Start">
            <summary>
            开始TimePoint
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.TimePointRange.End">
            <summary>
            结束TimePoint
            </summary>
        </member>
        <member name="P:Tamos.AbleOrigin.DataProto.TimePointRange.IsSpannedDay">
            <summary>
            是否跨天
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.TimePointRange.OnDate(System.DateTime)">
            <summary>
            以时间为基础，转为对应的当天时间范围，支持跨天。
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.TimePointRange.EndOnDate(System.DateTime)">
            <summary>
            以时间为基础，获取对应的结束时间，支持跨天。
            </summary>
        </member>
        <member name="M:Tamos.AbleOrigin.DataProto.TimePointRange.IsInRange(System.DateTime,System.Boolean)">
            <summary>
            判断时间是否在范围内，兼容跨天
            </summary>
        </member>
    </members>
</doc>
