// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Tamos.MetaCoding.GeneratorDesign.GrpcBuild
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Tamos.AbleOrigin.Common;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class TmplServiceProxy : TmplServiceProxyBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("/*------------------------------------------\r\n* <auto-generated>\r\n* 自动生成文件，请不要直接编" +
                    "辑！\r\n* </auto-generated>\r\n------------------------------------------*/\r\nusing Sys" +
                    "tem;\r\nusing System.Collections.Generic;\r\nusing ");
            
            #line 16 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GrpcBuildConfig.InfraNamespace));
            
            #line default
            #line hidden
            this.Write(".IOC;\r\nusing ");
            
            #line 17 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GrpcBuildConfig.InfraNamespace));
            
            #line default
            #line hidden
            this.Write(".Booster;\r\nusing ");
            
            #line 18 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GrpcBuildConfig.InfraNamespace));
            
            #line default
            #line hidden
            this.Write(".DataProto;\r\n\r\n#if !PRECODEGEN\r\nnamespace ");
            
            #line 21 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(config.OutNamespace.NoNull()));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n");
            
            #line 23 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
 foreach (var dotNetType in file.TypeList) { 
            
            #line default
            #line hidden
            this.Write("    public partial class ");
            
            #line 24 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(config.ServiceProxyName));
            
            #line default
            #line hidden
            this.Write(" : BaseGrpcServiceProxy<");
            
            #line 24 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(config.ContractName));
            
            #line default
            #line hidden
            this.Write(">,\r\n    ");
            
            #line 25 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(",\r\n    ", dotNetType.InheritAndImpls)));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n");
            
            #line 27 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
  foreach (GrpcOperation oper in dotNetType.TypeMembers) {
            
            #line default
            #line hidden
            this.Write("        ");
            
            #line 28 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Format("{0} {1}{2}({3})", oper.GetTypeName(oper.ReturnType), oper.GetRawInterface().Append(null, "."),
                oper.MethodInfo.Name, string.Join(", ", oper.Parameters.Select(oper.GetParameterDes)))));
            
            #line default
            #line hidden
            this.Write("\r\n        {\r\n            try\r\n            {\r\n                var _res_ = Client.");
            
            #line 33 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(oper.Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 33 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(oper.GetProxyCallParas()));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 33 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(config.OutSyncMethod ? string.Empty : ".Result"));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 34 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
          string byOut;
            var ableRetErr = oper.AbleReturnError(out byOut);
            var onExAssign = oper.WriteOutParaAssign(this, byOut);
            if (ableRetErr && !oper.ResRawType) { 
            
            #line default
            #line hidden
            this.Write("                if (!string.IsNullOrEmpty(_res_.ErrorMsg)) ");
            
            #line 38 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(byOut.NotNull() ? byOut : "_res_.P1"));
            
            #line default
            #line hidden
            this.Write(" = _res_.ErrorMsg;\r\n");
            
            #line 39 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
          } else if (!ableRetErr) { 
            
            #line default
            #line hidden
            this.Write("                if (!string.IsNullOrEmpty(_res_.ErrorMsg)) throw new Exception(_r" +
                    "es_.ErrorMsg);\r\n");
            
            #line 41 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
          }
            if (!oper.IsVoidReturn) { 
            
            #line default
            #line hidden
            this.Write("                ");
            
            #line 43 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(oper.ResRawType ? "return _res_;" : "return _res_.P1;"));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 44 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
          } 
            
            #line default
            #line hidden
            this.Write("            }\r\n            catch (Exception e)\r\n            {\r\n");
            
            #line 48 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
      if (!ableRetErr) { 
            
            #line default
            #line hidden
            this.Write("                throw e;\r\n");
            
            #line 50 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
      } else { 
                if (onExAssign.NotNull()) this.WriteLine("                " + onExAssign);
                if (!oper.IsVoidReturn) { 
            
            #line default
            #line hidden
            this.Write("                ");
            
            #line 53 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(oper.ResRawType ? $"return new {oper.ProxyResTypeName}().Error(e.Message);" : (byOut.IsNull() ? "return e.Message;" : "return default;")));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 54 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
      }} 
            
            #line default
            #line hidden
            this.Write("            }\r\n        }\r\n\r\n");
            
            #line 58 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
  } //------- Operations End -------
            
            #line default
            #line hidden
            this.Write("        public static ICollection<Type> GetServiceTypes()\r\n        {\r\n           " +
                    " return new[] {\r\n                ");
            
            #line 62 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(",\r\n                ", dotNetType.InheritAndImpls.NullableConcat(dotNetType.AddIocServices).Select(x => $"typeof({x})"))));
            
            #line default
            #line hidden
            this.Write("\r\n            };\r\n        }\r\n\r\n        public static void RegProxyImpl(LifeStyleT" +
                    "ype? lifeStyle = null)\r\n        {\r\n            ServiceLocator.Container.Register" +
                    "<");
            
            #line 68 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(config.ServiceProxyName));
            
            #line default
            #line hidden
            this.Write(">(GetServiceTypes(), lifeStyle);\r\n        }\r\n    }\r\n\r\n");
            
            #line 72 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"
} //-------- TypeList End --------
            
            #line default
            #line hidden
            this.Write("}\r\n#endif");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "E:\Projects\Private\Tamos.Origin\Tamos.MetaCoding\Tamos.MetaCoding.GeneratorDesign\GrpcBuild\TmplServiceProxy.tt"

private global::Tamos.MetaCoding.GeneratorDesign.GrpcBuildConfig _configField;

/// <summary>
/// Access the config parameter of the template.
/// </summary>
private global::Tamos.MetaCoding.GeneratorDesign.GrpcBuildConfig config
{
    get
    {
        return this._configField;
    }
}

private global::Tamos.MetaCoding.GeneratorDesign.CodeFile _fileField;

/// <summary>
/// Access the file parameter of the template.
/// </summary>
private global::Tamos.MetaCoding.GeneratorDesign.CodeFile file
{
    get
    {
        return this._fileField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public virtual void Initialize()
{
    if ((this.Errors.HasErrors == false))
    {
bool configValueAcquired = false;
if (this.Session.ContainsKey("config"))
{
    this._configField = ((global::Tamos.MetaCoding.GeneratorDesign.GrpcBuildConfig)(this.Session["config"]));
    configValueAcquired = true;
}
if ((configValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("config");
    if ((data != null))
    {
        this._configField = ((global::Tamos.MetaCoding.GeneratorDesign.GrpcBuildConfig)(data));
    }
}
bool fileValueAcquired = false;
if (this.Session.ContainsKey("file"))
{
    this._fileField = ((global::Tamos.MetaCoding.GeneratorDesign.CodeFile)(this.Session["file"]));
    fileValueAcquired = true;
}
if ((fileValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("file");
    if ((data != null))
    {
        this._fileField = ((global::Tamos.MetaCoding.GeneratorDesign.CodeFile)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public class TmplServiceProxyBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
